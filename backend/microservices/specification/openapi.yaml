openapi: 3.0.1
info:
  title: Ciencia Argentina Microservices
  version: v1
paths:
  /users:
    post:
      summary: "Sign up"
      description: "Registro de usuarios (sign-up)"
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '200':
          description: Success
  /users/{userId}:
    get:
      summary: "Get user by Id"
      description: "Obtiene un usuario por ID"
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
  /users/login:
    post:
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Success
  /users/sendconfirmationemail/{userId}:
    get:
      summary: "Send confirmation email"
      description: "Envío de email para la confirmación de un usuario"
      tags:
        - Users
      parameters:
        - name: userId
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
  /users/resendconfirmationemail:
    get:
      summary: "Resend confirmation email"
      tags:
        - Users
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Success
  /users/confirmemail:
    get:
      summary: "Confirm email"
      description: "Confirmación de email con token"
      tags:
        - Users
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: string
        - name: token
          in: query
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Success
  /users/sendpasswordreset:
    get:
      summary: "Send password reset"
      description: "Envío de mail para confirmar un cambio de password"
      tags:
        - Users
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Success
  /users/confirmpasswordreset:
    post:
      summary: "Confirm password reset"
      description: "Confirmación del cambio de contraseña"
      tags:
        - Users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                confirm_password:
                  type: string
                token:
                  type: string
              required:
                - email
                - password
                - confirm_password
                - token
      responses:
        '200':
          description: Success
  /users/forgotusername:
    get:
      summary: "Forgot username"
      description: "Envía al email, previamente confirmado, el nombre de usuario"
      tags:
        - Users
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Success
  /api/geo/countries:
    get:
      tags:
        - Geo
      responses:
        '200':
          description: Success
  /api/geo/states:
    get:
      tags:
        - Geo
      responses:
        '200':
          description: Success
  /api/geo/states/{stateId}/cities:
    get:
      tags:
        - Geo
      parameters:
        - name: stateId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        '200':
          description: Success
  /api/geo/cities/{cityId}/localities:
    get:
      tags:
        - Geo
      parameters:
        - name: cityId
          in: path
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        '200':
          description: Success
  /api/joboffers:
    get:
      tags:
        - JobOffers
      responses:
        '200':
          description: Success
    post:
      tags:
        - JobOffers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobOffer'
          application/json:
            schema:
              $ref: '#/components/schemas/JobOffer'
          text/json:
            schema:
              $ref: '#/components/schemas/JobOffer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobOffer'
      responses:
        '200':
          description: Success
  '/api/joboffers/{id}':
    get:
      tags:
        - JobOffers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - JobOffers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/JobOffer'
          application/json:
            schema:
              $ref: '#/components/schemas/JobOffer'
          text/json:
            schema:
              $ref: '#/components/schemas/JobOffer'
          application/*+json:
            schema:
              $ref: '#/components/schemas/JobOffer'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - JobOffers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/organizations:
    get:
      tags:
        - Organizations
      responses:
        '200':
          description: Success
    post:
      tags:
        - Organizations
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          text/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          description: Success
  '/api/organizations/{organizationId}':
    get:
      tags:
        - Organizations
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - Organizations
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/json:
            schema:
              $ref: '#/components/schemas/Organization'
          text/json:
            schema:
              $ref: '#/components/schemas/Organization'
          application/*+json:
            schema:
              $ref: '#/components/schemas/Organization'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - Organizations
      parameters:
        - name: organizationId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/organizations/{labId}':
    get:
      tags:
        - Organizations
      parameters:
        - name: labId
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/userProfiles/{userProfileId}:
    get:
      tags:
        - UserProfiles
      parameters:
        - name: userProfileId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserProfile'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
            text/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: Not Found
    post:
      tags:
        - UserProfiles
      parameters:
        - name: userProfileId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          text/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/UserProfile'
            application/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
            text/json:
              schema:
                $ref: '#/components/schemas/UserProfile'
        '404':
          description: Not Found
    put:
      tags:
        - UserProfiles
      parameters:
        - name: userProfileId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          text/json:
            schema:
              $ref: '#/components/schemas/UserProfile'
          application/*+json:
            schema:
              $ref: '#/components/schemas/UserProfile'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found
    delete:
      tags:
        - UserProfiles
      parameters:
        - name: userProfileId
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found
components:
  schemas:
    JobType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        publishDate:
          type: string
          format: date-time
        dateCreated:
          type: string
          format: date-time
        dateDeleted:
          type: string
          format: date-time
          nullable: true
      nullable: true
    ScolarshipEnum:
      enum:
        - 1
        - 2
        - 3
      type: integer
      format: int32
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
        dateDeleted:
          type: string
          format: date-time
          nullable: true
      nullable: true
    CareerStateEnum:
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    OrganizationType:
      type: object
      properties:
        description:
          type: string
          nullable: true
        payPlatform:
          type: number
          format: double
      nullable: true
    Locality:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
      nullable: true
    Points:
      type: object
      properties:
        latitud:
          type: string
          nullable: true
        longitud:
          type: string
          nullable: true
      nullable: true
    Geo:
      type: object
      properties:
        type:
          type: string
          nullable: true
        coordinates:
          $ref: '#/components/schemas/Points'
      nullable: true
    Address:
      type: object
      properties:
        streetName:
          type: string
          nullable: true
        streetNumber:
          type: string
          nullable: true
        zipCode:
          type: string
          nullable: true
        department:
          type: string
          nullable: true
        additionals:
          type: string
          nullable: true
        country:
          type: string
          nullable: true
        stateOrProvince:
          type: string
          nullable: true
        city:
          type: string
          nullable: true
        locality:
          $ref: '#/components/schemas/Locality'
        geo:
          $ref: '#/components/schemas/Geo'
      nullable: true
    Organization:
      type: object
      properties:
        name:
          type: string
          nullable: true
        initials:
          type: string
          nullable: true
        organizationType:
          $ref: '#/components/schemas/OrganizationType'
        logo:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        descriptionLarge:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
      nullable: true
    Department:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        link:
          type: string
          nullable: true
      nullable: true
    OrganizationProject:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        about:
          type: string
          nullable: true
        experimentalModel:
          type: string
          nullable: true
        responsable:
          type: string
          nullable: true
      nullable: true
    JobOffer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        isOpen:
          type: boolean
        jobType:
          $ref: '#/components/schemas/JobType'
        possibleThesis:
          type: boolean
        scolarship:
          $ref: '#/components/schemas/ScolarshipEnum'
        salary:
          type: number
          format: double
        endOffer:
          type: string
          format: date-time
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
        contactEmail:
          type: string
          nullable: true
        projectManager:
          type: string
          nullable: true
        researchTopics:
          type: string
          nullable: true
        experimentalModel:
          type: string
          nullable: true
        careerState:
          $ref: '#/components/schemas/CareerStateEnum'
        dateCareerFinish:
          type: string
          format: date-time
        labExperience:
          type: boolean
          nullable: true
        presentationLetter:
          type: boolean
        requirements:
          type: string
          nullable: true
        optionalRequirements:
          type: string
          nullable: true
        organization:
          $ref: '#/components/schemas/Organization'
        department:
          $ref: '#/components/schemas/Department'
        project:
          $ref: '#/components/schemas/OrganizationProject'
      nullable: true
    Identification:
      type: object
      properties:
        identificationType:
          type: string
          nullable: true
        identificationId:
          type: string
          nullable: true
      nullable: true
    SocialNetwork:
      type: object
      properties:
        socialNetworkName:
          type: string
          nullable: true
        userName:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      nullable: true
    Gender:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
      nullable: true
    Nationality:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      nullable: true
    WorkExperience:
      type: object
      properties:
        company:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        addittions:
          type: string
          nullable: true
        dateStart:
          type: string
          format: date-time
        dateEnd:
          type: string
          format: date-time
          nullable: true
        address:
          $ref: '#/components/schemas/Address'
      nullable: true
    UserStudyType:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
      nullable: true
    University:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      nullable: true
    UserStudyStatus:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
      nullable: true
    UserStudy:
      type: object
      properties:
        userStudyType:
          $ref: '#/components/schemas/UserStudyType'
        carrer:
          type: string
          nullable: true
        institution:
          type: string
          nullable: true
        additional:
          type: string
          nullable: true
        university:
          $ref: '#/components/schemas/University'
        userStudyStatus:
          $ref: '#/components/schemas/UserStudyStatus'
        dateStart:
          type: string
          format: date-time
        dateEnd:
          type: string
          format: date-time
          nullable: true
      nullable: true
    Telephone:
      type: object
      properties:
        type:
          type: string
          nullable: true
        countryCode:
          type: integer
          format: int32
        areaCode:
          type: integer
          format: int32
        phoneNumber:
          type: integer
          format: int32
      nullable: true
    UserProfile:
      required:
        - birthday
        - gender
        - lastName
        - name
        - nationality
      type: object
      properties:
        id:
          type: number
        name:
          type: string
        lastName:
          type: string
        identification:
          $ref: '#/components/schemas/Identification'
        socialNetwork:
          type: array
          items:
            $ref: '#/components/schemas/SocialNetwork'
          nullable: true
        gender:
          $ref: '#/components/schemas/Gender'
        address:
          $ref: '#/components/schemas/Address'
        birthday:
          type: string
          format: date
        nationality:
          $ref: '#/components/schemas/Nationality'
        workExperience:
          type: array
          items:
            $ref: '#/components/schemas/WorkExperience'
          nullable: true
        userStudy:
          type: array
          items:
            $ref: '#/components/schemas/UserStudy'
          nullable: true
        telephone:
          type: array
          items:
            $ref: '#/components/schemas/Telephone'
          nullable: true
      nullable: true