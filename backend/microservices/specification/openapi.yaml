openapi: 3.0.1
info:
  title: Ciencia Argentina Microservices
  version: v1
paths:
  /users:
    post:
      summary: "Sign up"
      description: "Registro de usuarios (sign-up)"
      tags:
        - user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                email:
                  type: string
                password:
                  type: string
              required:
                - username
                - email
                - password
      responses:
        '200':
          description: Success
  /users/{user_id}:
    get:
      summary: "Get user by Id"
      description: "Obtiene un usuario por ID"
      tags:
        - users
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
  /users/login:
    post:
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                password:
                  type: string
              required:
                - username
                - password
      responses:
        '200':
          description: Success
  /users/send_confirmation_email/{user_id}:
    get:
      summary: "Send confirmation email"
      description: "Envío de email para la confirmación de un usuario"
      tags:
        - users
      parameters:
        - name: user_id
          in: path
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Success
  /users/resend_confirmation_email:
    get:
      summary: "Resend confirmation email"
      tags:
        - users
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Success
  /users/confirmemail:
    get:
      summary: "Confirm email"
      description: "Confirmación de email con token"
      tags:
        - users
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: string
        - name: token
          in: query
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Success
  /users/send_password_reset:
    get:
      summary: "Send password reset"
      description: "Envío de mail para confirmar un cambio de password"
      tags:
        - users
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Success
  /users/confirm_password_reset:
    post:
      summary: "Confirm password reset"
      description: "Confirmación del cambio de contraseña"
      tags:
        - users
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                password:
                  type: string
                confirm_password:
                  type: string
                token:
                  type: string
              required:
                - email
                - password
                - confirm_password
                - token
      responses:
        '200':
          description: Success
  /users/forgot_username:
    get:
      summary: "Forgot username"
      description: "Envía al email, previamente confirmado, el nombre de usuario"
      tags:
        - users
      parameters:
        - name: email
          in: query
          required: true
          schema:
            type: string
            format: string
      responses:
        '200':
          description: Success
  /api/geo/countries:
    get:
      tags:
        - geo
      responses:
        '200':
          description: Success
  /api/geo/states:
    get:
      tags:
        - geo
      responses:
        '200':
          description: Success
  /api/geo/states/{state_id}/cities:
    get:
      tags:
        - geo
      parameters:
        - name: state_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        '200':
          description: Success
  /api/geo/cities/{city_id}/localities:
    get:
      tags:
        - geo
      parameters:
        - name: city_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
            nullable: true
      responses:
        '200':
          description: Success
  /api/job_offers:
    get:
      tags:
        - job_offers
      responses:
        '200':
          description: Success
    post:
      tags:
        - job_offers
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/job_offer'
          application/json:
            schema:
              $ref: '#/components/schemas/job_offer'
          text/json:
            schema:
              $ref: '#/components/schemas/job_offer'
      responses:
        '200':
          description: Success
  '/api/job_offers/{id}':
    get:
      tags:
        - job_offers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - job_offers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/job_offer'
          application/json:
            schema:
              $ref: '#/components/schemas/job_offer'
          text/json:
            schema:
              $ref: '#/components/schemas/job_offer'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - job_offers
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/organizations:
    get:
      tags:
        - organizations
      responses:
        '200':
          description: Success
    post:
      tags:
        - organizations
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/organization'
          application/json:
            schema:
              $ref: '#/components/schemas/organization'
          text/json:
            schema:
              $ref: '#/components/schemas/organization'
      responses:
        '200':
          description: Success
  '/api/organizations/{organization_id}':
    get:
      tags:
        - organizations
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
    put:
      tags:
        - organizations
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/organization'
          application/json:
            schema:
              $ref: '#/components/schemas/organization'
          text/json:
            schema:
              $ref: '#/components/schemas/organization'
      responses:
        '200':
          description: Success
    delete:
      tags:
        - organizations
      parameters:
        - name: organization_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  '/api/organizations/{lab_id}':
    get:
      tags:
        - organizations
      parameters:
        - name: lab_id
          in: path
          required: true
          schema:
            type: integer
            format: int32
      responses:
        '200':
          description: Success
  /api/userProfiles/{user_profile_id}:
    get:
      tags:
        - user_profile
      parameters:
        - name: user_profile_id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/user_profile'
            application/json:
              schema:
                $ref: '#/components/schemas/user_profile'
            text/json:
              schema:
                $ref: '#/components/schemas/user_profile'
        '404':
          description: Not Found
    post:
      tags:
        - user_profile
      parameters:
        - name: user_profile_id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/user_profile'
          application/json:
            schema:
              $ref: '#/components/schemas/user_profile'
          text/json:
            schema:
              $ref: '#/components/schemas/user_profile'
      responses:
        '200':
          description: Success
          content:
            text/plain:
              schema:
                $ref: '#/components/schemas/user_profile'
            application/json:
              schema:
                $ref: '#/components/schemas/user_profile'
            text/json:
              schema:
                $ref: '#/components/schemas/user_profile'
        '404':
          description: Not Found
    put:
      tags:
        - user_profile
      parameters:
        - name: user_profile_id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/user_profile'
          application/json:
            schema:
              $ref: '#/components/schemas/user_profile'
          text/json:
            schema:
              $ref: '#/components/schemas/user_profile'
      responses:
        '200':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found
    delete:
      tags:
        - user_profile
      parameters:
        - name: user_profile_id
          in: path
          required: true
          schema:
            type: string
            nullable: true
      responses:
        '204':
          description: Success
        '400':
          description: Bad Request
        '404':
          description: Not Found
components:
  schemas:
    Tag:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
        dateCreated:
          type: string
          format: date-time
        dateDeleted:
          type: string
          format: date-time
          nullable: true
      nullable: true
    language_skill:
            description: "Dominio del idioma"
            type: object
            properties:
               language:
                  type: string
                  nullable: true
                  enum: [English, Spanish, Portuguese, Mandarin, Deutsche]
               skill:
                 type: string
                 enum: 
                   - Native
                   - Second language
                   - Basic Knowledge
    career_status_enum:
      description: WARNING indicar aquí qué significan los enum
      enum:
        - 1
        - 2
        - 3
        - 4
        - 5
      type: integer
      format: int32
    organization_type:
      type: object
      properties:
        description:
          type: string
          nullable: true
        pay_platform:
          type: number
          format: double
      nullable: true
    locality:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
      nullable: true
    point:
      type: object
      properties:
        latitud:
          type: string
          nullable: true
        longitud:
          type: string
          nullable: true
      nullable: true
    geo:
      type: object
      description: WARNING hace falta un tipo, consensuamos siempre point
      properties:
        type:
          type: string
          enum: [point, OTRO]
          nullable: true
        coordinates:
          $ref: '#/components/schemas/point'
      nullable: true
    address:
      type: object
      properties:
        street_name:
          description: identification for the Street (Name and/or Number)
          type: string
          nullable: true
        street_number:
          description: postal number or identification for the house or building 
          type: string
          nullable: true
        zip_code:
          description: zip or portal code
          type: string
          nullable: true
        department:
          description: Name of the department (a.k.a Partido), sometimes between StateOrProvince and locality or City
          type: string
          nullable: true
        additionals:
          description: any additional data required for complete postal address
          type: string
          nullable: true
        country:
          description: name of the country
          type: string
          nullable: true
        state_or_province:
          description: name of the state or province or main political subdivision before Country level
          type: string
          nullable: true
        city:
          description: name of the city, sometimes before StateOrProvince
          type: string
          nullable: true
        locality:
          $ref: '#/components/schemas/locality'
        geo:
          $ref: '#/components/schemas/geo'
      nullable: true
    email_domain:
      description: organization domain email
      type: string
      pattern: ^\\w+([-+.']\\w+)*@\\w+([-.]\\w+)*\\.\\w{2,}([-.]\\w+)*$
    organization:
      description: organization offering researching projects
      type: object
      properties:
        name:
          description: complete name of the organization in its original language
          type: string
          nullable: true
        acronym:
          type: string
          pattern: /^([a-zA-Z0-9_-]){0,20}$/
          description: acronym identifying the organization 
          nullable: true
        organization_type:
          $ref: '#/components/schemas/organization_type'
        logo:
          type: object
          nullable: true
        summary:
          type: string
          pattern: /^([a-zA-Z0-9_-]){0,140}$/
          nullable: true
        description:
          type: string
          nullable: true
        website:
          description: organization website
          type: string
          format: url
          nullable: true
        address:
          $ref: '#/components/schemas/address'
        email_domains:
          type: array
          items:
            $ref: '#/components/schemas/email_domain'
      nullable: true
    department:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          description: complete name of a deparment or laboratory inside an organization
          type: string
          pattern: /^([a-zA-Z0-9_-]){0,140}$/
          nullable: true
        description:
          type: string
          nullable: true
        lab_site:
          type: string
          format: url
          nullable: true
        address:
          $ref: '#/components/schemas/address'
      nullable: true
    organization_project:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          type: string
          nullable: true
        about:
          type: string
          nullable: true
        experimental_model:
          type: string
          nullable: true
        responsible:
          type: string
          nullable: true
      nullable: true
    job_offer:
      type: object
      properties:
        id:
          type: integer
          format: int32
        title:
          description: short description or summary for the jobOffering
          type: string
          pattern: /^([a-zA-Z0-9_-]){0,140}$/
          nullable: true
        description:
          description: complete description or additional information of the jobOffering
          type: string
          pattern: /^([a-zA-Z0-9_-]){0,500}$/
          nullable: true
        is_open:
          type: boolean
        job_type:
          type: string
          enum: [SCHOLARSHIP, TRAINING, OTHER]
        possible_thesis:
          description: whether or not this job qualifies to be included as part of formal thesis
          type: boolean
        scolarship:
          type: string
          enum: [CONICET, UBA, AGENCIA, OTHER]
        salary:
          type: number
          format: double
        endOffer:
          type: string
          format: date-time
        tags:
          type: array
          items:
            $ref: '#/components/schemas/Tag'
          nullable: true
        contact_email:
          description: email address to get in contact with the offerer
          type: string
          format: email
          nullable: true
        project_manager:
          description: name of the manager driving the project
          type: string
          nullable: true
        research_topics:
          description: WARNING ESTO ES UN ARRAY DE TAGS. tags identifying research topics of the project.
          type: string
          nullable: true
        experimental_model:
          description: WARNING si es posible, definir como enum y mandar al schema
          type: string
          enum: [MODEL1, MODEL2, MODEL3]
          nullable: true
        career_status:
          $ref: '#/components/schemas/career_status_enum'
        end_career_estimated_date:
          description: last date this offering requires the academic education will be finished
          type: string
          format: date
        lab_experience:
          description: whether or not it offers lab experience
          type: boolean
          nullable: true
        cover_letter:
          description: whether or not it requires a formal presentation letter
          type: boolean
        requirements_summary:
          type: string
          pattern: /^([a-zA-Z0-9_-]){0,500}$/
          nullable: true
        requirements:
          type: string
          pattern: /^([a-zA-Z0-9_-]){0,500}$/
          nullable: true
        organization:
          $ref: '#/components/schemas/organization'
        department:
          $ref: '#/components/schemas/department'
        project:
          $ref: '#/components/schemas/organization_project'
      nullable: true
    identification:
      type: object
      properties:
        identificationType:
          description: Sigla que identifica al tipo de documento. Acronym for IdentificationType
          type: string
          enum: [DU, PASSPORT, OTHER]
          nullable: true
        identification_id:
          description: string generalmente llamado "número" de documento. Generally numeric string 
          type: string
          nullable: true
        issuing_date:
          type: string
          format: date
        issuing_country: 
          type: string
      nullable: true
    social_network:
      type: object
      properties:
        social_network_name:
          type: string
          enum: [IG, TWITTER, FB, LKDN]
          nullable: true
        username:
          description: username on the Social Network
          type: string
          nullable: true
        url:
          type: string
          description: profile url for our User
          format: url
          nullable: true
      nullable: true
    gender:
      type: object
      properties:
        id:
          type: integer
          format: int32
        description:
          type: string
          nullable: true
          enum: [MASCULINO, FEMENINO, NOT BINARY]
      nullable: true
    nationality:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
      nullable: true
    professional_experience:
      type: object
      properties:
        company:
          type: string
          nullable: true
        position:
          type: string
          nullable: true
        description:
          type: string
          nullable: true
        additional_information:
          type: string
          nullable: true
        starting_date:
          type: string
          format: date
        end_date:
          type: string
          format: date
          nullable: true
        address:
          $ref: '#/components/schemas/address'
      nullable: true
    academic_education_type:
      type: object
      properties:
        type:
          description: WARNING poner un enum para entender a qué tipo se refiere
          type: string
          enum: [DEGREE, PHD, MASTER, DOCTORADO, POSTDOCTORADO, OTROS]
        description: 
          type: string
          nullable: true
      nullable: true
    university:
      type: object
      properties:
        id:
          type: integer
          format: int32
        name:
          type: string
          nullable: true
        url:
          type: string
          nullable: true
      nullable: true
    academic_formation_status:
      type: object
      properties:
        type:
          type: string
          enum: [ONGOING, ENDED]
        description:
          type: string
          nullable: true
      nullable: true
    academic_formation:
      type: object
      properties:
        type:
          $ref: '#/components/schemas/academic_education_type'
        career:
          description: name of the title when formation ended
          type: string
          nullable: true
        institution:
          description: name of the institution when NOT university
          type: string
          nullable: true
        additional:
          type: string
          nullable: true
        university:
          $ref: '#/components/schemas/university'
        status:
          $ref: '#/components/schemas/academic_formation_status'
        starting_date:
          type: string
          format: date-time
        end_date:
          type: string
          format: date-time
          nullable: true
      nullable: true
    telephone:
      type: object
      description: WARNING, agregar patterns a cada código
      properties:
        type:
          type: string
          nullable: true
        telephone_country_code:
          type: integer
          format: int32
        telephone_area_code:
          type: integer
          format: int32
        telephone_number:
          type: integer
          format: int32
      nullable: true
    user_profile:
      required:
        - birthday
        - gender
        - lastname
        - name
        - nationality
      type: object
      properties:
        user_id:
          type: number
        name:
          description: given name, as is stated in identification
          type: string
        username:
          description: user preferred username (by default from email address or from name)
          type: string
          pattern: "^([a-zA-Z0-9_-]){4,8}$"
        lastname:
          description: family name, as is stated in identification
          type: string
        email:
          description: primary and unique email address for the user
          type: string
          format: email
        identification:
          $ref: '#/components/schemas/identification'
        social_network:
          type: array
          items:
            $ref: '#/components/schemas/social_network'
          nullable: true
        gender:
          $ref: '#/components/schemas/gender'
        address:
          $ref: '#/components/schemas/address'
        birthday:
          type: string
          format: date
        nationality:
          $ref: '#/components/schemas/nationality'
        professional_experience:
          type: array
          items:
            $ref: '#/components/schemas/professional_experience'
          nullable: true
        academic_formation:
          type: array
          items:
            $ref: '#/components/schemas/academic_formation'
          nullable: true
        user_contact_phone_number:
          type: array
          items:
            $ref: '#/components/schemas/telephone'
          nullable: true
        locale:
          type: string
          enum:
            - AR
            - CL
            - BR
            - PY
            - UY
            - OTHER
        timezone:
          type: string
          enum:
            - GMT
            - UTC
            - Z
        picture:
          description: picture or avatar
          type: string
          format: binary
        public_profile:
          description: public profile url if user enabled public profile
          type: object
          properties:
            enabled:
              type: boolean
            ciencia_argentina_user_profile: 
              type: string
              format: url
        user_blocked:
          description: "Usuario bloqueado"
          type: boolean
        user_languages:
            description: "Idiomas que conoce el usuario"
            type: array
            items:
              $ref: '#/components/schemas/language_skill'
            nullable: true
        
